{"version":3,"sources":["firebase/config.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Title.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","App.js","index.js"],"names":["firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","console","log","className","map","key","src","url","alt","Title","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","style","width","UploadForm","types","type","onChange","e","selected","target","files","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3d4262c.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCE31v-ku1YgAu61IrKtJDiFjOmvm7FeBg\",\r\n  authDomain: \"firegram-project-a78a3.firebaseapp.com\",\r\n  projectId: \"firegram-project-a78a3\",\r\n  storageBucket: \"firegram-project-a78a3.appspot.com\",\r\n  messagingSenderId: \"130514101878\",\r\n  appId: \"1:130514101878:web:ef50f98ceffb1bbecb6157\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectStorage, projectFirestore, timestamp };\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  projectStorage,\r\n  projectFirestore,\r\n  timestamp,\r\n} from \"../firebase/config\";\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsub = projectFirestore\r\n      .collection(collection)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snap) => {\r\n        let documents = [];\r\n        snap.forEach((doc) => {\r\n          documents.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setDocs(documents);\r\n      });\r\n    return () => unsub();\r\n  }, [collection]);\r\n\r\n  return { docs };\r\n};\r\n\r\nexport default useFirestore;\r\n","import React from \"react\";\r\nimport useFirestore from \"../hooks/useFirestore\";\r\n\r\nfunction ImageGrid() {\r\n  const { docs } = useFirestore(\"images\");\r\n  console.log(docs);\r\n\r\n  return (\r\n    <div className=\"img-grid\">\r\n      {docs &&\r\n        docs.map((doc) => (\r\n          <div className=\"img-wrap\" key={doc.id}>\r\n            <img src={doc.url} alt=\"uploaded img\" />\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageGrid;\r\n","import React from \"react\";\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>pictures</h1>\n      <h2>My Pictures</h2>\n      <p>My humble collection of photos.</p>\n    </div>\n  );\n};\n\nexport default Title;\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  projectStorage,\r\n  projectFirestore,\r\n  timestamp,\r\n} from \"../firebase/config\";\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFirestore.collection(\"images\");\r\n\r\n    storageRef.put(file).on(\r\n      \"state_changed\",\r\n      (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n        const url = await storageRef.getDownloadURL();\r\n        const createdAt = timestamp();\r\n        await collectionRef.add({ url, createdAt });\r\n        setUrl(url);\r\n      }\r\n    );\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n};\r\n\r\nexport default useStorage;\r\n","import React, { useEffect } from \"react\";\r\nimport useStorage from \"../hooks/useStorage\";\r\n\r\nfunction ProgressBar({ file, setFile }) {\r\n  const { url, progress } = useStorage(file);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      setFile(null);\r\n    }\r\n  }, [url, setFile]);\r\n\r\n  return <div className=\"progress-bar\" style={{ width: progress + \"%\" }}></div>;\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React, { useState } from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nfunction UploadForm() {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const types = [\"image/png\", \"image/jpeg\"];\r\n\r\n  const changeHandler = (e) => {\r\n    let selected = e.target.files[0];\r\n\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError(\"\");\r\n    } else {\r\n      setFile(null);\r\n      setError(\"Please select an image file (png or jpeg)\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <label>\r\n        <input type=\"file\" onChange={changeHandler} />\r\n        <span>+</span>\r\n      </label>\r\n      <div className=\"output\">\r\n        {error && <div className=\"error\">{error}</div>}\r\n        {file && <div>{file.name}</div>}\r\n        {file && <ProgressBar file={file} setFile={setFile} />}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default UploadForm;\r\n","import React from \"react\";\nimport ImageGrid from \"./comps/ImageGrid\";\nimport Title from \"./comps/Title\";\nimport UploadForm from \"./comps/UploadForm\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <ImageGrid />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}